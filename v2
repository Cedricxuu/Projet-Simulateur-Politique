import ollama
from ollama import *
import random
import time
from datetime import datetime

client = Client(host='http://localhost:11434')
log = []
mort = False

# Jauges
etat = {
    "Bonheur": 50,
    "Environnement": 50,
    "√âconomie": 50,
}


def questions():
    response = client.chat(
        model="mistral",
        messages=[
            {
                "role": "system",
                "content": 
                """Regle a respecter obligatoirement :    
                Pas d'intro/transition. 
                Tu dois inclure 3 types de solutions : 1 solution favorable √† l'√©conomie et d√©favorable au bonheur de la population, 1 solution favorable au bonheur de la population et d√©favorable √† l'√©conomie, 1 solution pouvant √™tre positif ou n√©gatif pour l'environnement et al√©atoirement bon pour l'√©conomie ou le bonheur de la population.
                TRES IMPORTANT ET OBLIGATOIRE POUR CHAQUE REPONSE : inclure les impacts dans une section cach√©e apr√®s les solutions, sous la forme suivante :
               
                Fran√ßais exclusif.
              
                Format strict : 
                
                R√©diger une premi√®re ligne illustrant le probl√®me et la situation (200 caract√®res maximum) 
                
                les Solutions en ordre al√©atoire au nombre de 3 obligatoirement :
                    [1] :  
                    [2] : 
                    [3] :  
                    
                
                """
            },
            {
                "role": "user",
                "content": "Pr√©sente un probl√®me politique/√©conomique qui pourrait arriver EN FRANCAIS"
            }
        ],
        options={
            'temperature': 0.8
        }
    )
    print("\n".join(line for line in response['message']['content'].split("\n") if not line.startswith("### Impacts ###")))
    return response['message']['content']


def extraire_impact(texte, choix):
    """Extrait les impacts des jauges √† partir de la section cach√©e."""
    if "### Impacts ###" in texte:
        impacts_section = texte.split("### Impacts ###")[1]
        lignes = impacts_section.split("\n")
        for ligne in lignes:
            if ligne.startswith(f"[{choix}]"):
                impact_str = ligne.split(":")[1].strip()
                impacts = {}
                for impact in impact_str.split(","):
                    jauge, valeur = impact.split(":")
                    impacts[jauge.strip()] = int(valeur.strip())
                return impacts
    return {}


def ajuster_jauges(impacts):
    """Ajuste les jauges en fonction des impacts extraits."""
    for jauge, valeur in impacts.items():
        if jauge in etat:
            etat[jauge] += valeur
            etat[jauge] = max(0, min(100, etat[jauge]))  # Limite entre 0 et 100


def afficher_jauges():
    print("\nüìä √âTAT DU PAYS :")
    for nom, valeur in etat.items():
        barres = int(valeur / 10)
        print(f"{nom:10} : [{'#' * barres}{'-' * (10 - barres)}] {valeur}/100")
    if any(valeur <= 0 for valeur in etat.values()):
        print("\nüí• Une des structures du pays s‚Äôeffondre. GAME OVER.")
        return True
    return False


while not mort:
    texte = questions()
    try:
        choix = int(input("\nR√©agissez en choisissant une solution (1, 2 ou 3) : "))
        impacts = extraire_impact(texte, choix)
        ajuster_jauges(impacts)
    except ValueError:
        print("Entr√©e invalide. Veuillez entrer un nombre entre 1 et 3.")
    mort = afficher_jauges()

print("Merci d'avoir jou√© !")
